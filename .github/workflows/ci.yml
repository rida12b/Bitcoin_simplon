# Nom du workflow
name: Python Application CI/CD

# Déclencheurs
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Tâches
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupérer le code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Étape 2 : Configurer Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # Étape 3 : Installer les dépendances
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Étape 4 : Créer la base de données de test
    - name: Prepare test database
      run: |
        python tests/setup_test_db.py

    # Étape 5 : Lancer les tests
    - name: Run tests with pytest
      run: |
        pytest

  package:
    name: Build Docker Image
    runs-on: ubuntu-latest
    # Cette tâche ne démarrera que si la tâche 'test' a réussi
    needs: test

    steps:
    # Étape 1 : Récupérer le code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Étape 2 : Configurer Docker Buildx (un builder avancé)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Étape 3 : Construire l'image Docker
    # On la "tag" (nomme) bitcoin-analyzer:latest
    - name: Build Docker image
      run: |
        docker build -t bitcoin-analyzer:latest .
        echo "Image Docker construite avec succès."